// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Product Item Should make a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <li
        class="sc-gsFSjX bxkOIO"
      >
        <div>
          <h3
            class="sc-fqkwJk kpHTiC"
            position="left"
          >
            Milk
          </h3>
          <p>
            <strong>
              P / F / C
               :
            </strong>
             
            1
            /
            2
            /
            3
          </p>
          <p>
            <strong>
              Сalories
               :
            </strong>
             
            34
          </p>
        </div>
        <div
          class="sc-aYaIB eLKLGl Input"
        >
          <label
            class="sc-gEvDqW cDSHgZ has-units"
          >
            <input
              autocomplete="off"
              data-testid="input"
              name="weight"
              type="number"
              value="100"
            />
            <span
              class="label"
            >
              Weight
            </span>
            <span
              class="units"
            >
              g
            </span>
          </label>
        </div>
        <button
          aria-label="Remove product"
          class="sc-iGgVNO bmyEPv sc-kAycRU ilFrKt"
          color="primary"
          type="button"
        >
          <span
            class="sc-dcJtft gzkRHp Icon"
            height="24px"
            role="img"
            width="24px"
          >
            <div>
              <div>
                <div
                  data-src="div"
                  src=""
                />
              </div>
            </div>
          </span>
        </button>
      </li>
    </div>
  </body>,
  "container": <div>
    <li
      class="sc-gsFSjX bxkOIO"
    >
      <div>
        <h3
          class="sc-fqkwJk kpHTiC"
          position="left"
        >
          Milk
        </h3>
        <p>
          <strong>
            P / F / C
             :
          </strong>
           
          1
          /
          2
          /
          3
        </p>
        <p>
          <strong>
            Сalories
             :
          </strong>
           
          34
        </p>
      </div>
      <div
        class="sc-aYaIB eLKLGl Input"
      >
        <label
          class="sc-gEvDqW cDSHgZ has-units"
        >
          <input
            autocomplete="off"
            data-testid="input"
            name="weight"
            type="number"
            value="100"
          />
          <span
            class="label"
          >
            Weight
          </span>
          <span
            class="units"
          >
            g
          </span>
        </label>
      </div>
      <button
        aria-label="Remove product"
        class="sc-iGgVNO bmyEPv sc-kAycRU ilFrKt"
        color="primary"
        type="button"
      >
        <span
          class="sc-dcJtft gzkRHp Icon"
          height="24px"
          role="img"
          width="24px"
        >
          <div>
            <div>
              <div
                data-src="div"
                src=""
              />
            </div>
          </div>
        </span>
      </button>
    </li>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "clearActions": [Function],
    "dispatch": [Function],
    "getActions": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;
